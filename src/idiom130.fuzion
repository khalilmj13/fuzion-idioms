depth_first_traverse(queue list<vertex>, visited ref psSet<vertex>) list<vertex> is
  match queue
    nil => lists.empty<vertex>
    c Cons =>
      if visited.contains c.head
        depth_first_traverse c.tail visited
      else
        neighbors := c.head.neighbors g
        ([c.head].asList ++ depth_first_traverse (neighbors ++ c.tail) (visited.add c.head))